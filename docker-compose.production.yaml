version: '3'

services:
  base:
    build:
      context: .
      dockerfile: docker/Dockerfile
      args:
        BUNDLE_WITHOUT: 'development:test'
        RAILS_ENV: 'production'
        RAILS_SERVE_STATIC_FILES: 'true'
    image: chatwoot-custom:latest

  rails:
    image: chatwoot-custom:latest
    env_file: .env
    environment:
      - NODE_ENV=production
      - RAILS_ENV=production
      - POSTGRES_HOST=postgres
      - REDIS_URL=redis://:ChatwootRedis2024@redis:6379
      - RAILS_MAX_THREADS=5
      - RAILS_SERVE_STATIC_FILES=true
    ports:
      - '3000:3000'
    depends_on:
      - postgres
      - redis
    command: ['bundle', 'exec', 'rails', 's', '-p', '3000', '-b', '0.0.0.0']

  sidekiq:
    image: chatwoot-custom:latest
    env_file: .env
    environment:
      - NODE_ENV=production
      - RAILS_ENV=production
      - POSTGRES_HOST=postgres
      - REDIS_URL=redis://:ChatwootRedis2024@redis:6379
    depends_on:
      - postgres
      - redis
    command: ['bundle', 'exec', 'sidekiq', '-C', 'config/sidekiq.yml']

  postgres:
    image: pgvector/pgvector:pg16
    restart: always
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=sql@2012
      - POSTGRES_DB=chatwoot
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - '5432:5432'

  redis:
    image: redis:7-alpine
    restart: always
    command: redis-server --requirepass ChatwootRedis2024
    volumes:
      - redis_data:/data

volumes:
  postgres_data:
  redis_data:
